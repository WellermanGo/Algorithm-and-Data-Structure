//找x或x的后继
int bin_search1(int* a, int n, int x)
{
    int left = 1, right = n;
    while (left < right)
    {
        int mid = (left + right) >> 1;
        if (a[mid] >= x)right = mid;
        else left = mid + 1;
    }
    return left;
}
//找x或x的前驱
int bin_search2(int* a, int n, int x)
{
    int left = 1, right = n-1;
    while (left < right)
    {
        int mid = (left + right+1) >> 1;
        if (a[mid] <= x)left = mid;
        else right = mid - 1;
    }
    return left;
}

//洛谷P1824（整数二分）
#include <iostream>
#include <algorithm>
using namespace std;
const int N = 1e5+5;
using ll = long long;
int a[N];
int n, c;
bool check(int dis)
{
    int cnt = 1, place = 0;       //第一头牛放在a[0]处牛棚
    for (int i = 1; i < n; i++)
    {
        if (a[i] - a[place] >= dis)
        {
            cnt++;
            place = i;
        }
    }
    if (cnt >= c)return true;
    else return false;
}
int main()
{
    cin >> n >> c;
    for (int i = 0; i < n; i++)cin >> a[i];
    sort(a, a + n);
    int left = 0, right = a[n - 1] - a[0];
    int ans = 0;
    while (left < right)
    {
        int mid = (left + right) >> 1;
        if (check(mid))
        {
            ans = mid;
            left = mid + 1;
        }
        else right = mid;
    }
    cout << ans;
    return 0;
}
